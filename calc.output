Terminals unused in grammar

   exit_command


Grammar

    0 $accept: line $end

    1 line: assignment ';'
    2     | line assignment ';'
    3     | print variable ';'
    4     | line print variable ';'

    5 assignment: variable '=' polynom

    6 polynom: brackets
    7        | brackets brackets
    8        | '-' polynom
    9        | polynom '-' polynom
   10        | polynom '+' polynom
   11        | polynom '*' polynom
   12        | monom

   13 brackets: '(' polynom ')'

   14 monom: term monom
   15      | number
   16      | number monom
   17      | variable
   18      | term


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13
')' (41) 13
'*' (42) 11
'+' (43) 10
'-' (45) 8 9
';' (59) 1 2 3 4
'=' (61) 5
error (256)
print (258) 3 4
exit_command (259)
number (260) 15 16
variable (261) 3 4 5 17
term (262) 14 18
NEG (263)


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
line (17)
    on left: 1 2 3 4, on right: 0 2 4
assignment (18)
    on left: 5, on right: 1 2
polynom (19)
    on left: 6 7 8 9 10 11 12, on right: 5 8 9 10 11 13
brackets (20)
    on left: 13, on right: 6 7
monom (21)
    on left: 14 15 16 17 18, on right: 12 14 16


State 0

    0 $accept: . line $end

    print     shift, and go to state 1
    variable  shift, and go to state 2

    line        go to state 3
    assignment  go to state 4


State 1

    3 line: print . variable ';'

    variable  shift, and go to state 5


State 2

    5 assignment: variable . '=' polynom

    '='  shift, and go to state 6


State 3

    0 $accept: line . $end
    2 line: line . assignment ';'
    4     | line . print variable ';'

    $end      shift, and go to state 7
    print     shift, and go to state 8
    variable  shift, and go to state 2

    assignment  go to state 9


State 4

    1 line: assignment . ';'

    ';'  shift, and go to state 10


State 5

    3 line: print variable . ';'

    ';'  shift, and go to state 11


State 6

    5 assignment: variable '=' . polynom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 17
    brackets  go to state 18
    monom     go to state 19


State 7

    0 $accept: line $end .

    $default  accept


State 8

    4 line: line print . variable ';'

    variable  shift, and go to state 20


State 9

    2 line: line assignment . ';'

    ';'  shift, and go to state 21


State 10

    1 line: assignment ';' .

    $default  reduce using rule 1 (line)


State 11

    3 line: print variable ';' .

    $default  reduce using rule 3 (line)


State 12

   15 monom: number .
   16      | number . monom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14

    $default  reduce using rule 15 (monom)

    monom  go to state 22


State 13

   17 monom: variable .

    $default  reduce using rule 17 (monom)


State 14

   14 monom: term . monom
   18      | term .

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14

    $default  reduce using rule 18 (monom)

    monom  go to state 23


State 15

    8 polynom: '-' . polynom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 24
    brackets  go to state 18
    monom     go to state 19


State 16

   13 brackets: '(' . polynom ')'

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 25
    brackets  go to state 18
    monom     go to state 19


State 17

    5 assignment: variable '=' polynom .
    9 polynom: polynom . '-' polynom
   10        | polynom . '+' polynom
   11        | polynom . '*' polynom

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 5 (assignment)


State 18

    6 polynom: brackets .
    7        | brackets . brackets

    '('  shift, and go to state 16

    $default  reduce using rule 6 (polynom)

    brackets  go to state 29


State 19

   12 polynom: monom .

    $default  reduce using rule 12 (polynom)


State 20

    4 line: line print variable . ';'

    ';'  shift, and go to state 30


State 21

    2 line: line assignment ';' .

    $default  reduce using rule 2 (line)


State 22

   16 monom: number monom .

    $default  reduce using rule 16 (monom)


State 23

   14 monom: term monom .

    $default  reduce using rule 14 (monom)


State 24

    8 polynom: '-' polynom .
    9        | polynom . '-' polynom
   10        | polynom . '+' polynom
   11        | polynom . '*' polynom

    '-'  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 8 (polynom)


State 25

    9 polynom: polynom . '-' polynom
   10        | polynom . '+' polynom
   11        | polynom . '*' polynom
   13 brackets: '(' polynom . ')'

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    ')'  shift, and go to state 31


State 26

   10 polynom: polynom '+' . polynom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 32
    brackets  go to state 18
    monom     go to state 19


State 27

    9 polynom: polynom '-' . polynom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 33
    brackets  go to state 18
    monom     go to state 19


State 28

   11 polynom: polynom '*' . polynom

    number    shift, and go to state 12
    variable  shift, and go to state 13
    term      shift, and go to state 14
    '-'       shift, and go to state 15
    '('       shift, and go to state 16

    polynom   go to state 34
    brackets  go to state 18
    monom     go to state 19


State 29

    7 polynom: brackets brackets .

    $default  reduce using rule 7 (polynom)


State 30

    4 line: line print variable ';' .

    $default  reduce using rule 4 (line)


State 31

   13 brackets: '(' polynom ')' .

    $default  reduce using rule 13 (brackets)


State 32

    9 polynom: polynom . '-' polynom
   10        | polynom . '+' polynom
   10        | polynom '+' polynom .
   11        | polynom . '*' polynom

    '-'  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 10 (polynom)


State 33

    9 polynom: polynom . '-' polynom
    9        | polynom '-' polynom .
   10        | polynom . '+' polynom
   11        | polynom . '*' polynom

    '*'  shift, and go to state 28

    $default  reduce using rule 9 (polynom)


State 34

    9 polynom: polynom . '-' polynom
   10        | polynom . '+' polynom
   11        | polynom . '*' polynom
   11        | polynom '*' polynom .

    '*'  shift, and go to state 28

    $default  reduce using rule 11 (polynom)
